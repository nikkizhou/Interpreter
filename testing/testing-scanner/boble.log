   1: # Boblesortering
   2: # (Den enkleste men akk sÃ¥ ineffektive sorteringsmetoden)
   3: 
   4: def boblesorter (a):
Scanner: def token on line 4
Scanner: name token on line 4: boblesorter
Scanner: ( token on line 4
Scanner: name token on line 4: a
Scanner: ) token on line 4
Scanner: : token on line 4
Scanner: NEWLINE token on line 4
   5:     while True:
Scanner: INDENT token on line 5
Scanner: while token on line 5
Scanner: True token on line 5
Scanner: : token on line 5
Scanner: NEWLINE token on line 5
   6:         endret = False
Scanner: INDENT token on line 6
Scanner: name token on line 6: endret
Scanner: = token on line 6
Scanner: False token on line 6
Scanner: NEWLINE token on line 6
   7:         for i in range(1,len(a)):
Scanner: for token on line 7
Scanner: name token on line 7: i
Scanner: in token on line 7
Scanner: name token on line 7: range
Scanner: ( token on line 7
Scanner: integer literal token on line 7: 1
Scanner: , token on line 7
Scanner: name token on line 7: len
Scanner: ( token on line 7
Scanner: name token on line 7: a
Scanner: ) token on line 7
Scanner: ) token on line 7
Scanner: : token on line 7
Scanner: NEWLINE token on line 7
   8:             if a[i-1] > a[i]:
Scanner: INDENT token on line 8
Scanner: if token on line 8
Scanner: name token on line 8: a
Scanner: [ token on line 8
Scanner: name token on line 8: i
Scanner: - token on line 8
Scanner: integer literal token on line 8: 1
Scanner: ] token on line 8
Scanner: > token on line 8
Scanner: name token on line 8: a
Scanner: [ token on line 8
Scanner: name token on line 8: i
Scanner: ] token on line 8
Scanner: : token on line 8
Scanner: NEWLINE token on line 8
   9:                 t = a[i-1];a[i-1]=a[i];a[i] = t
Scanner: INDENT token on line 9
Scanner: name token on line 9: t
Scanner: = token on line 9
Scanner: name token on line 9: a
Scanner: [ token on line 9
Scanner: name token on line 9: i
Scanner: - token on line 9
Scanner: integer literal token on line 9: 1
Scanner: ] token on line 9
Scanner: ; token on line 9
Scanner: name token on line 9: a
Scanner: [ token on line 9
Scanner: name token on line 9: i
Scanner: - token on line 9
Scanner: integer literal token on line 9: 1
Scanner: ] token on line 9
Scanner: = token on line 9
Scanner: name token on line 9: a
Scanner: [ token on line 9
Scanner: name token on line 9: i
Scanner: ] token on line 9
Scanner: ; token on line 9
Scanner: name token on line 9: a
Scanner: [ token on line 9
Scanner: name token on line 9: i
Scanner: ] token on line 9
Scanner: = token on line 9
Scanner: name token on line 9: t
Scanner: NEWLINE token on line 9
  10:                 endret = True
Scanner: name token on line 10: endret
Scanner: = token on line 10
Scanner: True token on line 10
Scanner: NEWLINE token on line 10
  11:         if not endret: return 0
Scanner: DEDENT token on line 11
Scanner: DEDENT token on line 11
Scanner: if token on line 11
Scanner: not token on line 11
Scanner: name token on line 11: endret
Scanner: : token on line 11
Scanner: return token on line 11
Scanner: integer literal token on line 11: 0
Scanner: NEWLINE token on line 11
  12: 
  13: data = [ 3, 17, -3, 0, 3, 1, 12 ]
Scanner: DEDENT token on line 13
Scanner: DEDENT token on line 13
Scanner: name token on line 13: data
Scanner: = token on line 13
Scanner: [ token on line 13
Scanner: integer literal token on line 13: 3
Scanner: , token on line 13
Scanner: integer literal token on line 13: 17
Scanner: , token on line 13
Scanner: - token on line 13
Scanner: integer literal token on line 13: 3
Scanner: , token on line 13
Scanner: integer literal token on line 13: 0
Scanner: , token on line 13
Scanner: integer literal token on line 13: 3
Scanner: , token on line 13
Scanner: integer literal token on line 13: 1
Scanner: , token on line 13
Scanner: integer literal token on line 13: 12
Scanner: ] token on line 13
Scanner: NEWLINE token on line 13
  14: boblesorter(data)
Scanner: name token on line 14: boblesorter
Scanner: ( token on line 14
Scanner: name token on line 14: data
Scanner: ) token on line 14
Scanner: NEWLINE token on line 14
  15: print("Resultatet er", data)
Scanner: name token on line 15: print
Scanner: ( token on line 15
Scanner: string literal token on line 15: "Resultatet er"
Scanner: , token on line 15
Scanner: name token on line 15: data
Scanner: ) token on line 15
Scanner: NEWLINE token on line 15
Scanner: E-o-f token
